spring:
  redis:
    host: localhost
    port: 6379
    database: 0
  cloud:
    gateway:
      discovery:
        locator:
          # 是否和服务注册与发现组件结合，设置为 true 后可以直接使用应用名称调用服务
          enabled: true
          lower-case-service-id: true
          default-filters:
            - AddResponseHeader=X-Response-Default-Foo, Default-Bar
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1  #令牌桶的容积
                redis-rate-limiter.burstCapacity: 1  #流速 每秒
                rate-limiter: "#{@defaultRedisRateLimiter}"  #SPEL表达式去的对应的bean
                key-resolver: "#{@remoteAddressKeyResolver}" #SPEL表达式去的对应的bean
          routes:
            - id: web-server
              uri: lb://web-server
              predicates:
                - Path=/web-server/**
              filters:
                - StripPrefix=1
                - AddResponseHeader=foo, bar
            - id: msg-consumer
              uri: lb://msg-consumer
              predicates:
                - Path=/msg-consumer/**
              filters:
                - StripPrefix=1
                - AddResponseHeader=feign
        # 跨域
        globalcors:
          corsConfigurations:
            '[/**]':
              allowedHeaders: "*"
              allowedOrigins: "*"
              allowedMethods:
                - GET
                  POST
                  DELETE
                  PUT
                  OPTION
#请求和响应GZIP压缩支持
feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true
  #  compression:
  #    response:
  #      enabled: true
  #    request:
  #      enabled: true
  #      mime-types: text/xml,application/xml,application/json
  #      min-request-size: 2048
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          # 隔离策略，有THREAD和SEMAPHORE
          # THREAD - 它在单独的线程上执行，并发请求受线程池中的线程数量的限制
          # SEMAPHORE - 它在调用线程上执行，并发请求受到信号量计数的限制
          strategy: Semaphore
          semaphore:
            # 该参数当使用ExecutionIsolationStrategy.SEMAPHORE策略时才有效。如果达到最大并发请求数，请求会被拒绝。
            # 选用semaphore时每次执行的单元要比较小且执行速度快(ms级别)，否则的话应该用thread，semaphore应该占整个容器(tomcat)的线程池的一小部分
            # 只有在高并发(单个实例每秒达到几百个调用)的调用时，才需要修改HystrixCommands 的隔离策略为semaphore
            # 最大并发请求数，默认10
            maxConcurrentRequests: 10
          thread:
            timeoutInMilliseconds: 3000
eureka:
  instance:
    # 使用 ip 代替实例名
    prefer-ip-address: true
    # 实例的主机名
    hostname: ${spring.cloud.client.ip-address}
    # 实例的 ID 规则
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
  client:
    serviceUrl:
      defaultZone: http://henry:faith@localhost:9761/eureka/
server:
  port: 9000