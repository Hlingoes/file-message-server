eureka:
  client:
    serviceUrl:
      defaultZone: http://henry:faith@localhost:9761/eureka/
spring:
  application:
    name: web-server
  servlet:
    multipart:
      #单个文件的最大上限
      max-file-size: 2048MB
      #单个请求的文件总大小上限
      max-request-size: 2048MB
  http-client:
    pool:
      #连接池的最大连接数，0代表不限；如果取0，需要考虑连接泄露导致系统崩溃的后果
      maxTotalConnect: 1000
      #每个路由的最大连接数,如果只调用一个地址,可以将其设置为最大连接数
      maxConnectPerRoute: 200
      # 指客户端和服务器建立连接的超时时间,ms , 最大约21秒,因为内部tcp在进行三次握手建立连接时,默认tcp超时时间是20秒
      connectTimeout: 20000
      # 指客户端从服务器读取数据包的间隔超时时间,不是总读取时间,也就是socket timeout,ms
      readTimeout: 30000
      # 从连接池获取连接的timeout,不宜过大,ms
      connectionRequestTimout: 20000
      # 重试次数
      retryTimes: 3
      # 长连接保持时间 单位s,不宜过长
      keepAliveTime: 10
      # 针对不同的网址,长连接保持的存活时间,单位s,如果是频繁而持续的请求,可以设置小一点,不建议设置过大,避免大量无用连接占用内存资源
      keepAliveTargetHost:
        www.baidu.com: 5
        www.cnblogs.com: 2
  ftp:
    pool:
      host: 192.168.1.107
      port: 21
      username: henry
      password: faith
      #ftp 连接超时时间 毫秒
      connectTimeOut: 5000
      #控制连接的字符编码
      controlEncoding: UTF-8
      #缓冲区大小
      bufferSize: 512
      #传输文件类型，2表二进制
      fileType: 2
      #数据传输超时 毫秒
      dataTimeout: 120000
      #是否启用ftp被动模式
      passiveMode: true
      #连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true
      blockWhenExhausted: true
      #最大空闲等待时间(毫秒)，建议设置稍微长点，如90分钟
      maxWaitMillis: 5400000
      #最大空闲连接数
      maxIdle: 20
      #最大连接数
      maxTotal: 50
      #最小空闲连接数
      minIdle: 5
      #申请连接时 检测是否有效
      testOnBorrow: true
      #创建连接时 检测是否有效
      testOnCreate: true
      #返回连接时 检测是否有效
      testOnReturn: true
      #空闲时检测连接是否有效
      testWhileIdle: true
      useEPSVwithIPv4: false
  -rabbitmq:
    host: localhost
    port: 5672
    username: henry
    password: faith
    publisher-returns: true
    publisher-confirms: true
    template:
      mandatory: true
    listener:
      simple:
        acknowledge-mode: manual
        default-requeue-rejected: false
        concurrency: 1
        max-concurrency: 1
        prefetch: 1
        retry:
          enabled: true
  datasource:
    mysqlClients:
      - type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ny_cloud_vue?useUnicode=true&amp;characterEncoding=UTF-8
        username: henry
        password: faith
        master: false
        routeKey: ny_cloud_vue
      - type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/henrydb?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&autoReconnect=true
        username: henry
        password: faith
        master: true
        routeKey: henrydb
    initialSize: 2    #连接池初始大小
    minIdle: 10       #连接池中最小的活跃连接数
    maxActive: 20     #连接池中最大的活跃连接数
    maxWait: 60000   #配置获取连接等待超时的时间
    poolPreparedStatements: true    #打开PSCache，并且指定每个连接上PSCache的大小
    maxPoolPreparedStatementPerConnectionSize: 20
    validationQuery: SELECT 1
    validationQueryTimeout: 30000
    testOnBorrow: false             #是否在获得连接后检测其可用性
    testOnReturn: false             #是否在连接放回连接池后检测其可用性
    testWhileIdle: true             #是否在连接空闲一段时间后检测其可用性
    filters: wall,stat
  quartz:
    #相关属性配置
    properties:
      org:
        quartz:
          scheduler:
            instanceName: quartzScheduler
            instanceId: AUTO
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
#mybatis配置
mybatis:
  type-aliases-package: cn.henry.study.entity
  mapper-locations: classpath:mybatis/mapper/*.xml
#分页配置, pageHelper是物理分页插件
pagehelper:
  #4.0.0以后版本可以不设置该参数，该示例中是5.1.4
  helper-dialect: mysql
  #启用合理化，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

server:
  port: 9012
  connection-timeout: 80000
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000        #最大并发数
    max-connections: 20000   #接受和处理的最大连接数
    min-spare-threads: 20     #初始化时创建的线程数
    acceptCount: 700         #可以放到处理队列中的请求数
    max-http-post-size: -1
    maxHttpHeaderSize: -1

#日志配置，自定义日志路径，防止因自动加载顺序问题，读取不到spring的配置
logging.config: classpath:logback-custom.xml
logback:
  logHome: logs
  siftLogHome: logs/sift_retry_log